#!/usr/bin/env node

const { spawn } = require('child_process');
const path = require('path');

console.log('๐ ุจุฏุก ุงูุฎุงุฏู ุงูุขูู ูุน ุฅุตูุงุญ ูุดููุฉ vite...');

// Try vite-start.js first
console.log('๐ฆ ุชุดุบูู vite-start.js...');
const child = spawn('node', ['vite-start.js'], {
  stdio: 'inherit',
  cwd: __dirname,
  env: {
    ...process.env,
    NODE_ENV: 'development'
  }
});

child.on('error', (error) => {
  console.error('โ ุฎุทุฃ ูู ุจุฏุก ุงูุฎุงุฏู:', error.message);
  console.log('๐ ูุญุงููุฉ npx vite...');
  
  // Fallback to npx vite
  const fallback = spawn('npx', ['vite', 'dev', '--host', '0.0.0.0', '--port', '8080'], {
    stdio: 'inherit',
    shell: true,
    env: {
      ...process.env,
      NODE_ENV: 'development'
    }
  });
  
  fallback.on('error', (err) => {
    console.error('โ ูุดู ูู ุฌููุน ุงููุญุงููุงุช:', err.message);
    console.log('๐ก ูุฑุฌู ุชุดุบูู: npm install');
    process.exit(1);
  });
});

child.on('exit', (code) => {
  if (code !== 0) {
    console.log(`ุงูุฎุงุฏู ุชููู ุจููุฏ ${code}`);
  }
});